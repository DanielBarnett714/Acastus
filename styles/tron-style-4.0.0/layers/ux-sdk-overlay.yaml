layers:
    # Map overlays for styling the server response (using special source layer names) for route line, current location, and search result pins
    mz_route_line:
        data: { source: mz_route_line }
        draw:
            ux-route-line-overlay:
                color: [1.000, 1.000, 0.000, 1.00]
                order: 500
                width: [[0,5px],[5,12px],[11,12px],[13,14px],[14,18px],[15,24px],[16,28px],[17,30px],[18,30px]]
    mz_route_line_dash:
        data: { source: mz_dash_line }
        draw:
            ux-route-line-dash-overlay:
                color: [1.000,1.000,0.000]
                order: 500
                width: [[2,2px],[5,2.5px],[11,3px],[16,7px],[17,9px]]
    mz_route_line_transit:
        data: { source: mz_route_line_transit }
        draw:
            ux-transit-line-overlay:
                # each transit route segment could be a different "line" each with it's own color
                # but some transit lines don't define a color, in those cases default to blue
                # and since the color is coming from Transit.land they call it "color" instead of "colour"
                color: function() { return feature.color || '#06a6d4'; }
                order: 500
                width: [[0,5px],[5,12px],[11,12px],[13,14px],[14,18px],[15,24px],[16,28px],[17,30px],[18,30px]]
    mz_current_location_gem:
        data: { source: mz_current_location }
        draw:
            ux-location-gem-overlay:
                interactive: global.sdk_interactive
                sprite: ux-current-location
                size: 36px
                collide: false
                transition: { show: { time: 0s }, hide: { time: 0s } }
    mz_route_location:
        data: { source: mz_route_location }
        draw:
            ux-location-gem-overlay:
                interactive: global.sdk_interactive
                sprite: ux-route-arrow
                size: [60px,60px]
                collide: false
                transition: { show: { time: 0s }, hide: { time: 0s } }
    mz_route_start:
        data: { source: mz_route_start }
        draw:
            ux-icons-overlay:
                interactive: global.sdk_interactive
                priority: 1
                sprite: ux-route-start
                size: [36px,46px]
                collide: false
                anchor: top
                transition: { show: { time: 0s }, hide: { time: 0s } }
    mz_route_destination:
        data: { source: mz_route_destination }
        draw:
            ux-icons-overlay:
                interactive: global.sdk_interactive
                priority: 1
                sprite: ux-route-stop
                size: [36px,46px]
                collide: false
                anchor: top
                transition: { show: { time: 0s }, hide: { time: 0s } }
    mz_route_transit_stop:
        data: { source: mz_route_transit_stop }
        draw:
            ux-icons-overlay:
                interactive: global.sdk_interactive
                sprite: ux-transit-stop
                size: [15px,15px]
                collide: false
                transition: { show: { time: 0s }, hide: { time: 0s } }
    mz_search_result:
        data: { source: mz_search_result }
        draw:
            ux-icons-overlay:
                interactive: global.sdk_interactive
                sprite: ux-search-active
                size: [36px,54px]
                collide: false
                anchor: top
                transition: { show: { time: 0s }, hide: { time: 0s } }
        inactive:
            filter: { state: inactive }
            draw:
                ux-icons-overlay:
                    sprite: ux-search-inactive
    mz_dropped_pin:
        data: { source: mz_dropped_pin }
        draw:
            ux-icons-overlay:
                interactive: global.sdk_interactive
                sprite: ux-search-active
                size: [36px,54px]
                collide: false
                anchor: top
                transition: { show: { time: 0s }, hide: { time: 0s } }

    # Used by the SDK to place point, line, and polygon overlays on the map
    mz_default_point:
        data: { source: mz_default_point }
        draw:
            sdk-point-overlay:
                interactive: global.sdk_interactive
                sprite: ux-search-active
                size: [36px,54px]
                collide: false
                anchor: top
                transition: { show: { time: 0s }, hide: { time: 0s } }
    mz_default_shield:
        data: { source: mz_default_shield }
        draw:
            sdk-shield-overlay:
                interactive: global.sdk_interactive
                sprite: |
                    function() {
                        if( feature.ref ) {
                            return ('sdk_shield-' + feature.ref.length + 'char');
                        } else {
                            return ('sdk_shield-' + feature.name.length + 'char');
                        }
                    }
                sprite_default: sdk_shield-1char
                color: global.sdk_shield_color
                collide: false
                transition: { show: { time: 0s }, hide: { time: 0s } }
                text:
                    # offset: [0px, -1px]
                    text_source: |
                        function() {
                            if( feature.ref ) {
                                return feature.ref;
                            } else {
                                return feature.name;
                            }
                        }
                    anchor: center
                    font:
                        family: Montserrat
                        fill: global.sdk_shield_text_color
                        style: bold
                        size: [[7,7px],[12,8px],[16,11px]]

        width_1char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 1);
                    } else {
                        return (feature.name.length === 1);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[16px,16px]],[13,[18px,18px]],[16,[21px,21px]]]
        width_2char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 2);
                    } else {
                        return (feature.name.length === 2);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[21px,16px]],[13,[24px,18px]],[16,[28px,21px]]]
        width_3char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 3);
                    } else {
                        return (feature.name.length === 3);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[27px,16px]],[13,[31px,18px]],[16,[36px,21px]]]
        width_4char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 4);
                    } else {
                        return (feature.name.length === 4);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[32px,16px]],[13,[36px,18px]],[16,[41px,21px]]]
        width_5char:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length === 5);
                    } else {
                        return (feature.name.length === 5);
                    }
                }
            draw:
                sdk-shield-overlay:
                    size: [[6,[37px,16px]],[13,[41px,18px]],[16,[48px,21px]]]
        # this is kinda a hack
        width_longggggg:
            filter: |
                function() {
                    if( feature.ref ) {
                        return (feature.ref.length > 5);
                    } else {
                        return (feature.name.length > 5);
                    }
                }
            draw:
                sdk-shield-overlay:
                    visible: false
    mz_default_line:
        data: { source: mz_default_line }
        draw:
            sdk-line-overlay:
                color: [1.000,0.000,1.000]
                order: 503
                width: 3px
    mz_default_polygon:
        data: { source: mz_default_polygon }
        draw:
            sdk-polygon-overlay:
                color: [1.000,0.000,1.000,0.5]  #'#06b1e2'
                order: 501
            sdk-line-overlay:
                color: '#06a6d4'
                order: 502
                width: 0px

styles:
    ux-route-line-overlay:
        base: lines
        mix: [lines-glow]
        blend: overlay
        blend_order: 0
        shaders:
            defines:
                GLOW_WIDTH: 0.45
                GLOW_BRIGHTNESS: .5
    ux-route-line-dash-overlay:
        base: lines
        blend: overlay
        blend_order: 0
        dash: [2, 1]
    ux-transit-line-overlay:
        base: lines
        mix: [lines-glow]
        blend: overlay
        blend_order: 0
        shaders:
            defines:
                GLOW_WIDTH: 0.45
                GLOW_BRIGHTNESS: .5
    ux-location-gem-overlay:
        base: points
        mix: icons
        interactive: global.sdk_interactive
        blend: overlay
        blend_order: 2
    ux-icons-overlay:
        base: points
        mix: icons
        interactive: global.sdk_interactive
        blend: overlay
        blend_order: 3
    sdk-point-overlay:
        base: points
        mix: icons
        interactive: global.sdk_interactive
        blend: overlay
        blend_order: 3
    sdk-shield-overlay:
        base: points
        mix: icons
        interactive: global.sdk_interactive
        blend: overlay
        blend_order: 3
    sdk-line-overlay:
        base: lines
        blend: overlay
        blend_order: 0
    sdk-polygon-overlay:
        base: polygons
        blend: overlay
        blend_order: 0
